MARS CALLING CONVENTION (for aphelion):

    {rg, rh, ri, rj, rk} are parameters, returns, and caller-saved (may be overwritten)

    both integer and floating point are passed through these registers.
    parameters and returns that are bigger than a register can be broken up and passed by register
    if possible.

    if all calling-convention registers are used up, argument spill over onto the stack,
    where the first stack-passed argument is below (more positive) the return address (in reverse order).
    stack arguments must be aligned to 8, the return address must be aligned to 8.


    a call to g() inside f() makes the stack look like this:

        |------ align 8 ------|
        | return address      |
        | saved frame pointer |
        | locals of f()       |
        |------ align 8 ------|
        | stack argument N    |
        |       ....          |
        | stack argument 1    |
        | stack argument 0    |
        |------ align 8 ------|
        | return address      |
        | saved frame pointer |
        | locals of g()       |