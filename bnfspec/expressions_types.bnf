<fn_literal> ::= "fn" "(" (<param_list> ("," | E) | E) ")" ("->" (<type> | "(" <param_list> ")") | E) <stmt_block>
<param> ::= <identifier> ":" <type> 
<multi_param> ::= (<identifier> ",")+ <identifier> ":" <type> 
<param_list> ::= <param_list> "," <param> | 
                 <param_list> "," <multi_param> | 
                 <param> | <multi_param>

<fn_pointer> ::= "fn" "(" ((<type> ",")* <type> | E) ")" ("->" (<type> | "(" (<type> ",")* <type> ")")| E) 

<expression> ::= <expression> <binop> <expression> | <unary_expression>

<atomic_expression> ::= <literal> |  "." <identifier> | 
                        "(" <expression> ")" | <fn_literal> | <type> |
                        (<type> | E) "." "{" ((<expression> ",")* <expression> ("," | E) | E) "}" |
                        <atomic_expression> ("::" | "." | "->") <identifier> |
                        <atomic_expression> "[" <expression> "]" |
                        <atomic_expression> "[" (<expression> | E) ":" (<expression> | E) "]" |
                        <atomic_expression> "(" ((<expression> ",")* <expression> ("," | E) | E) ")" |
                        <atomic_expression> "^"

<type> ::= <identifier> |
        "i8" | "i16" | "i32" | "i64" | "int" |
        "u8" | "u16" | "u32" | "u64" | "uint" |
        "f16" | "f32" | "f64" | "float" | "bool" |
        <aggregate> | <enum> | <fn_pointer> |
        ("^" | "[]") ("mut" | "let") ( <type> | E) |
        "[" <expression> "]" <type>


<unary_expression> ::= <unop> <unary_expression> |
                       ("cast" | "bitcast") "(" <unary_expression> ")" <unary_expression> | 
                       "distinct" <unary_expression> |
                       <atomic_expression>

<binop> ::= "*" | "/" | "%" | "%%" | "&" | "<<" | ">>" | "~|" |
               "+" | "-" | "|" | "~" |
               "==" | "!=" | "<" | ">" | "<=" | ">=" |
               "&&" | "||" 

<unop> ::= "&" | "-" | "~" | "!" | "?" | "sizeof" | "alignof"

<aggregate> ::= ("struct" | "union")  "{" <param_list> "}"
//enum param_list uses = as a separator, not a :
//enum param_list also has expressions instead of types.
//its just a really fucky param_list,  we should seperate this out
<enum> ::= "enum" <type> "{" <param_list> "}"
