<fn> ::= <fn_type> <ws> "{" <ws> <stmts> <ws> "}"

<fn_type> ::= "fn" <ws> "(" <ws> (<param_list> | E) <ws> ")" (<ws> "->" (<ws> <type> <ws> | <ws> "(" <param_list> ")" <ws>) | E)

<param> ::= <identifier> <ws> ":" <ws> <type> <ws>
<multi_param> ::= (<ws> <identifier> <ws> ",")+ <ws> <identifier> <ws> ":" <ws> <type> <ws>
<param_list> ::= <param_list> <ws> "," <ws> <param> | 
                 <param_list> <ws> "," <ws> <multi_param> | 
                 <param> | <multi_param>

<type> ::= "i8" | "i16" | "i32" | "i64" | "int" |
           "u8" | "u16" | "u32" | "u64" | "uint" |
           "f16" | "f32" | "f64" | "float" | "bool" | <identifier> | ("^" | "[]") <ws> ("mut" | "let") (<fws> <type> | E) |
           "[" <ws> (<digit>+ | E) <ws> "]" <type> 

<expression> ::= "(" <ws> <expression> <ws> ")" | <expression> <binop> <expression> | <ws> <identifier> <ws> |
                 <unop> <ws> <expression> | <expression> <ws> "^" |
                 <expression> <ws> "[" <ws> (<digit>+ | <identifier>) <ws> ":" <ws> (<digit>+ | <identifier>) <ws> "]" |
                 ("cast" | "bitcast") <ws> "(" <ws> <type> <ws> ")" <ws> <expression> | <ws> <numeric_literal> <ws> |
                 <identifier> <ws> ("::" | "." | "->") <ws> <expression>

<binop> ::= "*" | "/" | "%" | "%%" | "&" | "<<" | ">>" | "~|" |
               "+" | "-" | "|" | "~" |
               "==" | "!=" | "<" | ">" | "<=" | ">=" |
               "&&" | "||" |
               "[" <ws> (<digit>+ | <identifier>) <ws> "]"

<unop> ::= "&" | "-" | "~" | "!"

<aggregate> ::= ("struct" | "union") <fws> <identifier> <ws> "{" 
                (<ws> <identifier> <ws> ":" <ws> <type> <ws> "," <ws>)+ 
                "}" <ws> ";" <ws>
<enum> ::= "enum" <fws> ("i8" | "i16" | "i32" | "i64" | "int" |
           "u8" | "u16" | "u32" | "u64" | "uint" | E) <ws> "{" <ws>
           (<ws> <identifier> <ws> "," <ws>)+ <ws> "}" <ws> ";" <ws>