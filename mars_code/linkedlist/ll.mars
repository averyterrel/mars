module ll;

import arena "../arena";

type Node = distinct struct {
    val: int,
    next: ^mut Node,
};

let new_node = fn(val: int) -> ^mut Node {
    let n : ^mut Node = arena::alloc(sizeof(Node), alignof(Node));
    n.val = val;
    n.next = null;
    return n;
};

let node_at = fn(node: ^let Node, index: int) -> ^mut Node {
    mut i = index;
    mut n = cast(^mut Node)node;
    while i != 0 {
        if (n == null) do return null;
        n = n.next;
        i -= 1;
    }
    return n;
};