module neptune;

let PUTC_PORT : u64 = 100;

let kprintln = fn(str: []u8) {
    kprint(str);
    kputc('\n');

}

let kprint = fn(str: []u8) {
    for i in 0..<str.len {
        kputc(str[i]);
    }
};

let kputc = fn(c: u8) {
    asm(c -> "ra", PUTC -> "rb") {
        "out rb, ra"
    }
}

let kprintf = fn(format: []u8, args: []addr) {
    if args.len == 0 {
        kprint(format);
        return;
    }

    for i in 0..<format.len {
        
    }
}

let print_integer = fn(value: uint, bitsize: uint, signed: bool) {
    // implementation pending
}

