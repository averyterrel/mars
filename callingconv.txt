parameters that are larger than register size OR non-base types (arrays, structs, etc) are passed on the stack.
even if a struct is smaller than a register, it should still be passed on the stack.

if is a base type that is the size of a register or smaller, it is passed by register.

if all calling-conv registers are used up, they spill over onto the stack.

// take the function foo as an example:
    foo :: fn(a: int, b: int, c: []int, d: int)
// a, b, and d are passed through registers ra, rb, and rc. c is put on the stack.
